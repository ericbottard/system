// Code generated by protoc-gen-go. DO NOT EDIT.
// source: riff-serialization.proto

package serialization

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A Message represents a single event, serialized as an opaque payload, to be interpreted according to a given content-type.
type Message struct {
	// The actual content of the event.
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// How to interpret the bytes that make up the payload of this message.
	ContentType string `protobuf:"bytes,2,opt,name=contentType,proto3" json:"contentType,omitempty"`
	// Additional custom headers for this message.
	Headers              map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f207959eeae1ef6, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *Message) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "serialization.Message")
	proto.RegisterMapType((map[string]string)(nil), "serialization.Message.HeadersEntry")
}

func init() { proto.RegisterFile("riff-serialization.proto", fileDescriptor_2f207959eeae1ef6) }

var fileDescriptor_2f207959eeae1ef6 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x28, 0xca, 0x4c, 0x4b,
	0xd3, 0x2d, 0x4e, 0x2d, 0xca, 0x4c, 0xcc, 0xc9, 0xac, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x45, 0x11, 0x54, 0x3a, 0xc0, 0xc8, 0xc5, 0xee, 0x9b, 0x5a,
	0x5c, 0x9c, 0x98, 0x9e, 0x2a, 0x24, 0xc1, 0xc5, 0x5e, 0x90, 0x58, 0x99, 0x93, 0x9f, 0x98, 0x22,
	0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x13, 0x04, 0xe3, 0x0a, 0x29, 0x70, 0x71, 0x27, 0xe7, 0xe7, 0x95,
	0xa4, 0xe6, 0x95, 0x84, 0x54, 0x16, 0xa4, 0x4a, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x06, 0x21, 0x0b,
	0x09, 0xd9, 0x72, 0xb1, 0x67, 0xa4, 0x26, 0xa6, 0xa4, 0x16, 0x15, 0x4b, 0x30, 0x2b, 0x30, 0x6b,
	0x70, 0x1b, 0x29, 0xeb, 0xa1, 0xda, 0x0e, 0xb5, 0x44, 0xcf, 0x03, 0xa2, 0xca, 0x35, 0xaf, 0xa4,
	0xa8, 0x32, 0x08, 0xa6, 0x47, 0xca, 0x8a, 0x8b, 0x07, 0x59, 0x42, 0x48, 0x80, 0x8b, 0x39, 0x3b,
	0xb5, 0x12, 0xec, 0x0c, 0xce, 0x20, 0x10, 0x53, 0x48, 0x84, 0x8b, 0xb5, 0x2c, 0x31, 0xa7, 0x14,
	0x66, 0x39, 0x84, 0x63, 0xc5, 0x64, 0xc1, 0xe8, 0x64, 0xc9, 0xa5, 0x96, 0x99, 0x0f, 0xf2, 0x5d,
	0x56, 0x6a, 0x72, 0x09, 0xc8, 0xdf, 0x20, 0x76, 0x72, 0x6a, 0x71, 0x71, 0x7e, 0x11, 0xaa, 0x1b,
	0x02, 0x18, 0xa3, 0x50, 0x7d, 0x9f, 0xc4, 0x06, 0x0e, 0x13, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x39, 0x84, 0xe1, 0x4d, 0x2f, 0x01, 0x00, 0x00,
}
